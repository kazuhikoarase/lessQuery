{"version":3,"file":"minq.js","sources":["../src/minq.ts"],"sourcesContent":["//\n// minQuery\n//\n// Copyright (c) 2017 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n\n/// <reference path=\"../minq.d.ts\" />\n\n\nconst extend = function<S,T, U extends S & T>(o1 : S, o2 : T) : U {\n  const _o1 : any = o1;\n  for (let k in o2) { _o1[k] = o2[k]; } return _o1;\n};\n\nconst each = function(it : any, callback : (k : string, v : any) => void) {\n  for (let k in it) { callback(k, it[k]); }\n};\n\nconst fn : MinQueryFn = {\n  each : function(this : MinQuery, callback : (i : number) => void) {\n    for (let i = 0; i < this.length; i += 1) {\n      callback.call(this[i], i);\n    }\n    return this;\n  }\n};\n\nconst fn_ref : any = fn;\neach(fn_ref, function(name, func) {\n  if (name == 'each') return;\n  fn_ref[name] = function(this : MinQuery) {\n    for (let i = 0; i < this.length; i += 1) {\n      func.apply(this[i], arguments);\n    }\n    return this;\n  };\n});\n\nconst $ = function(_target? : string|Window|Element|Document) : MinQuery {\n  const elms : any = [];\n  elms.__proto__ = fn;\n  return elms;\n};\n\nexport const minQuery : MinQueryStatic = extend($, { fn, extend, each });\n\n\n/*\nvar minQuery = function() {\n\n  var extend = function(o1, o2) {\n    for (var k in o2) { o1[k] = o2[k]; } return o1;\n  };\n\n  var each = function(it, callback) {\n    for (var k in it) { callback(k, it[k]); }\n  };\n\n  // 1. for single element\n  var fn = {\n    css : function(kv) {\n      for (var k in kv) { this.style[k] = kv[k]; } return this;\n    },\n    on : function(type, listener) {\n      this.addEventListener(type, listener); return this;\n    }\n  };\n\\\\\\\\\n  // 2. to array\n  each(fn, function(name, func) {\n    fn[name] = function() {\n      for (var i = 0; i < this.length; i += 1) {\n        var ret = func.apply(this[i], arguments);\n      }\n      return this;\n    };\n  });\n\n  // 3. for array\n  fn = extend(fn, {\n    each : function(callback) {\n      for (var i = 0; i < this.length; i += 1) {\n        callback.call(this[i], i);\n      }\n      return this;\n    }\n  });\n\n  var $ = function(target) {\n\n    if (typeof target == 'function') {\n\n      // ready\n      return $(document).on('DOMContentLoaded', target);\n\n    } else if (typeof target == 'string') {\n\n      // query\n      var childNodes = document.querySelectorAll(target);\n      var elms = [];\n      for (var i = 0; i < childNodes.length; i += 1) {\n        elms.push(childNodes.item(i) );\n      }\n      elms.__proto__ = fn;\n      return elms;\n\n    } else if (typeof target == 'object' && target != null) {\n\n      var elms = [];\n      elms.push(target);\n      elms.__proto__ = fn;\n      return elms;\n\n    } else {\n\n      var elms = [];\n      elms.__proto__ = fn;\n      return elms;\n    }\n  };\n\n  return extend($, { fn : fn, extend : extend, each : each });\n}();\n*/\n"],"names":["extend","o1","o2","_o1","k","each","it","callback","fn","i","fn_ref","name","func","$","_target","elms","minQuery"],"mappings":"gFAeA,MAAMA,EAAS,SAA+BC,EAAQC,EAAY,CAChE,MAAMC,EAAYF,EAClB,QAASG,KAAKF,EAAMC,EAAIC,CAAC,EAAIF,EAAGE,CAAC,EAAK,OAAOD,CAC/C,EAEME,EAAO,SAASC,EAAUC,EAA0C,CACxE,QAASH,KAAKE,EAAMC,EAASH,EAAGE,EAAGF,CAAC,CAAC,CACvC,EAEMI,EAAkB,CACtB,KAAO,SAA0BD,EAAiC,CAChE,QAASE,EAAI,EAAGA,EAAI,KAAK,OAAQA,GAAK,EACpCF,EAAS,KAAK,KAAKE,CAAC,EAAGA,CAAC,EAE1B,OAAO,IAAA,CAEX,EAEMC,EAAeF,EACrBH,EAAKK,EAAQ,SAASC,EAAMC,EAAM,CAC5BD,GAAQ,SACZD,EAAOC,CAAI,EAAI,UAA0B,CACvC,QAASF,EAAI,EAAGA,EAAI,KAAK,OAAQA,GAAK,EACpCG,EAAK,MAAM,KAAKH,CAAC,EAAG,SAAS,EAE/B,OAAO,IAAA,EAEX,CAAC,EAED,MAAMI,EAAI,SAASC,EAAsD,CACvE,MAAMC,EAAa,CAAA,EACnB,OAAAA,EAAK,UAAYP,EACVO,CACT,EAEaC,EAA4BhB,EAAOa,EAAG,CAAE,GAAAL,EAAI,OAAAR,EAAQ,KAAAK,EAAM"}